workflows:
  ios-automatic-code-signing:
    name: iOS automatic code signing
    instance_type: mac_mini_m1
    working_directory: ios/ios-automatic-code-signing-demo-project
    environment:
      groups:
        - ios_creds # <-- (group contains variables: APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace"
        XCODE_SCHEME: "swiftly"
        BUNDLE_ID: "io.codemagic.cmswiftly"
        APP_STORE_APP_ID: 1570610860
      xcode: 16.2
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: "development"
          include: true
          source: true
    scripts:
#      - name: Install pods
#        script: |
#          pod install
#      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
#        script: |
#          keychain initialize
#      - name: Fetch signing files
#        script: |
#          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
#      - name: Use system default keychain
#        script: |
#          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Increment build number
        script: |
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Build ipa for distribution
        working_directory: ios/ios-automatic-code-signing-demo-project
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

  ios-manual-code-signing:
    name: iOS manual code signing
    instance_type: mac_mini_m1
    working_directory: ios/ios-manual-code-signing-demo-project
    environment:
      groups:
        - ios_manual_signing # <-- (group contains variables: CM_PROVISIONING_PROFILE, CM_CERTIFICATE)
        - ios_creds # <-- (group contains variables: APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace" # <-- Put the name of your workspace here.
        XCODE_SCHEME: "swiftly" # <-- Put the name of your scheme here.
        APP_STORE_APP_ID: 1571469558
      xcode: latest # <-- set to specific version e.g. 16.2, 15.0 to avoid unexpected updates.
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: "develop"
          include: true
          source: true
    scripts:
      - name: Install pods
        script: |
          pod install
      - name: Initialize keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: set up provisioning profiles
        script: |
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
          echo "Saved provisioning profile $PROFILE_PATH"
      - name: Add signing certificate to keychain
        script: |
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12
      - name: Increment build number
        script: |
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build .ipa
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - mohamed.3wad20@gmail.com
        notify:
          success: true
          failure: true
      slack:
        channel: "#ce-builds"
        notify_on_build_start: true # To receive a notification when a build starts
        notify:
          success: false # To not receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      app_store_connect: # https://docs.codemagic.io/publishing-yaml/distribution
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
  ios-code-signing-identities:
    name: iOS code signing identities
    integrations:
      app_store_connect: NC_API_KEY
    instance_type: mac_mini_m2
    working_directory: ios/ios-code-signing-identities-demo-project
    environment:
      ios_signing:
        provisioning_profiles:
          - swiftly-profile
        certificates:
          - ios-distribution
      groups:
        - ios_creds # <-- (group contains variables: APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace" # <-- Put the name of your workspace here.
        XCODE_SCHEME: "swiftly" # <-- Put the name of your scheme here.
        APP_STORE_APP_ID: 1570610860
      xcode: latest # <-- set to specific version e.g. 16.2, 15.0 to avoid unexpected updates.
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: "develop"
          include: true
          source: true
    scripts:
      - name: Install pods
        script: |
          pod install
      - name: Increment build number
        script: |
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build .ipa
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - mohamed.3wad20@gmail.com
        notify:
          success: true
          failure: true
      slack:
        channel: "#ce-builds"
        notify_on_build_start: true # To receive a notification when a build starts
        notify:
          success: false # To not receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      app_store_connect: # https://docs.codemagic.io/publishing-yaml/distribution
        # Use referenced App Store Connect API key to authenticate binary upload
        auth: integration
  ios-magic-actions:
    name: ios-magic-actions
    instance_type: mac_mini_m2
    working_directory: ios/ios-magic-actions-demo-project
    environment:
      groups:
        - ios_creds # <-- (group contains variables: APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace"
        XCODE_SCHEME: "swiftly"
        BUNDLE_ID: "io.codemagic.cmswiftly"
        APP_STORE_APP_ID: 1570610860
      xcode: 16.2
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Codemagic CLI Tools build
        script: |
          #!/bin/sh
          set -ex
          pip3 install codemagic-cli-tools # The Codemagic CLI tools are already installed on Codemagic servers
          keychain initialize
          pod init && pod install
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
          keychain add-certificates
          xcode-project use-profiles
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"

          # Use Codemagic to publish to take advantage of asynchronous Magic Actions otherwise use app-store-connect publish command and pass whats_new.json for release notes.
          # app-store-connect publish --beta-build-localizations=@file:whats_new.json
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: false # Boolean use to indicate if you want to submit to TestFlight review so external testers can test your app
  ios-fastlane:
    name: iOS Fastlane
    instance_type: mac_mini_m2
    working_directory: integrations/fastlane-integration-demo-project
    environment:
      groups:
        - ios_creds # <-- (group contains variables: APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
        - fastlane_credentials # <-- (group contains variables: MATCH_SSH_KEY, MATCH_KEYCHAIN, MATCH_PASSWORD)
      xcode: 16.2
      cocoapods: default
    scripts:
      # - gem install bundler:2.2.27
      - bundle install
      - bundle exec fastlane beta
  flutter-yaml-ios:
    name: Flutter yaml iOS
    instance_type: mac_mini_m2
    working_directory: flutter/flutter-android-and-ios-yaml-demo-project
    max_build_duration: 120
    environment:
      groups:
        - ios_creds # <-- (group contains variables: APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
      vars:
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        BUNDLE_ID: "io.codemagic.cmflutteryaml"
        APP_STORE_APP_ID: 1571561263
      flutter: stable
      xcode: 16.2
      cocoapods: default
    scripts:
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Flutter analyze
        script: |
          flutter analyze
      - name: Flutter unit tests
        script: |
          flutter test
        ignore_failure: true
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
          --build-name=1.0.0 \
          --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1)) \
          --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
      email:
        recipients:
          - user_1@example.com
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      slack:
        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: "#ce-builds"
        notify_on_build_start: true # To receive a notification when a build starts
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: false # Boolean use to indicate if you want to submit to TestFlight review so external testers can test your app